<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java基础（常用类之String类）</title>
    <url>/2020/04/26/Java%E5%9F%BA%E7%A1%80%EF%BC%88%E5%B8%B8%E7%94%A8%E7%B1%BB%E4%B9%8BString%E7%B1%BB%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、String简介"><a href="#一、String简介" class="headerlink" title="一、String简介"></a>一、String简介</h1><blockquote>
<p>String类：代表字符串。Java程序中的所有字符串字面值（如“ABC”）都作为此类的实例实现。</p>
<p>它是一个final类，不可被继承，是一个常量，值在创建之后不能更改，即代表<font style=color:red>不可变的字符序列</font>。</p>
</blockquote>
<h1 id="二、创建字符串对象两种方式的区别"><a href="#二、创建字符串对象两种方式的区别" class="headerlink" title="二、创建字符串对象两种方式的区别"></a>二、创建字符串对象两种方式的区别</h1><h2 id="1、直接赋值方式创建对象"><a href="#1、直接赋值方式创建对象" class="headerlink" title="1、直接赋值方式创建对象"></a>1、直接赋值方式创建对象</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str1 = <span class="string">"abc"</span>;	<span class="comment">//字面量的定义方式</span></span><br><span class="line">String str2 = <span class="string">"abc"</span>;</span><br><span class="line">System.out.println(str1==str2);	<span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<p> 直接赋值方式创建对象是声明在方法区的字符串<span style="color:red">常量池 </span>中。字符串常量池中不会存储相同内容的字符串的,所以此时<code>str1==str2</code>的结果为true。这种方式只开辟一块堆内存空间，并且会自动入池，不会产生垃圾。 </p>
<h2 id="2、通过构造方法创建字符串对象"><a href="#2、通过构造方法创建字符串对象" class="headerlink" title="2、通过构造方法创建字符串对象"></a>2、通过构造方法创建字符串对象</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str1 = <span class="keyword">new</span> String(<span class="string">"hello"</span>);<span class="comment">//实例化的方式</span></span><br><span class="line">String str2 = <span class="keyword">new</span> String(<span class="string">"hello"</span>);</span><br><span class="line">System.out.println(str1==str2);	<span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<p>此时的str1和str2保存的地址是数据在堆空间中开辟空间以后对应的地址值。 这种方式会开辟两块堆内存空间，其中一块堆内存会变成垃圾被系统回收，而且不能够自动入池，需要通过<code>public  String intern();</code>方法进行手工入池。 </p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@3.0/picture/String%E5%86%85%E5%AD%98%E5%9B%BE.png" alt=""></p>
<p><strong>面试题</strong>：String s = new String(“abc”);方式创建对象，在内存中创建了几个对象？<br>               两个:一个是堆空间中new结构，另一个是char[]对应的常量池中的数据：”abc”</p>
<h2 id="3、两种方式拼接字符串的对比"><a href="#3、两种方式拼接字符串的对比" class="headerlink" title="3、两种方式拼接字符串的对比"></a>3、两种方式拼接字符串的对比</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s1 = <span class="string">"javaABC"</span>;</span><br><span class="line">String s2 = <span class="string">"java"</span>;</span><br><span class="line">String s3 = s2 + <span class="string">"ABC"</span>;</span><br><span class="line">String str = s3.intern();</span><br><span class="line">System.out.println(s1 == s3);	<span class="comment">//false</span></span><br><span class="line">System.out.println(s1 == str);	<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> String s4 = <span class="string">"java"</span>;		<span class="comment">//s4为常量</span></span><br><span class="line">String s5 = s4 + <span class="string">"ABC"</span>;</span><br><span class="line">System.out.println(s1 == s5);	<span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<p> <strong>结论</strong>：<br>    1.常量与常量的拼接结果在常量池。且常量池中不会存在相同内容的常量。<br>    2.只要其中有一个是变量，结果就在堆中。<br>    3.如果拼接的结果调用intern()方法，返回值就在常量池中</p>
<h1 id="三、String的常用方法"><a href="#三、String的常用方法" class="headerlink" title="三、String的常用方法"></a>三、String的常用方法</h1><p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@3.0/picture/String%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95.png" alt=""></p>
<h2 id="1、String的转换功能"><a href="#1、String的转换功能" class="headerlink" title="1、String的转换功能"></a>1、String的转换功能</h2><p><strong>1、常用方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">　　<span class="keyword">char</span>[] toCharArray()	<span class="comment">//把字符串转换为字符数组</span></span><br><span class="line">　　<span class="function">String <span class="title">toLowerCase</span><span class="params">()</span>	<span class="comment">//把字符串转换为小写字符串</span></span></span><br><span class="line"><span class="function">　　String <span class="title">toUpperCase</span><span class="params">()</span>	<span class="comment">//把字符串转换为大写字符串</span></span></span><br></pre></td></tr></table></figure>

<p>​    <strong>2、代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestString</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">         <span class="comment">// 创建字符串对象</span></span><br><span class="line">        String s = <span class="string">"abcde"</span>;</span><br><span class="line">        <span class="comment">// char[] toCharArray():把字符串转换为字符数组</span></span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; chs.length; x++) &#123;</span><br><span class="line">            System.out.println(chs[x]);</span><br><span class="line">        &#125; </span><br><span class="line">        System.out.println(<span class="string">"-----------"</span>);</span><br><span class="line">        <span class="comment">// String toLowerCase():把字符串转换为小写字符串</span></span><br><span class="line">        System.out.println(<span class="string">"HelloWorld"</span>.toLowerCase());</span><br><span class="line">        <span class="comment">// String toUpperCase():把字符串转换为大写字符串</span></span><br><span class="line">        System.out.println(<span class="string">"HelloWorld"</span>.toUpperCase());     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a</span></span><br><span class="line"><span class="comment">b</span></span><br><span class="line"><span class="comment">c</span></span><br><span class="line"><span class="comment">d</span></span><br><span class="line"><span class="comment">e</span></span><br><span class="line"><span class="comment">-----------</span></span><br><span class="line"><span class="comment">helloworld</span></span><br><span class="line"><span class="comment">HELLOWORLD</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<p>​        <strong>字符串的遍历</strong>有两种方式：一是ength()加上charAt()；二是把字符串转换为字符数组，然后遍历数组。</p>
<h2 id="2、String类的获取功能"><a href="#2、String类的获取功能" class="headerlink" title="2、String类的获取功能"></a>2、String类的获取功能</h2><p><strong>1、常用方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span>	<span class="comment">//获取字符串的长度，其实也就是字符个数</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">charAt</span><span class="params">(<span class="keyword">int</span> index)</span>	<span class="comment">//获取指定索引处的字符</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String str)</span>	<span class="comment">//获取str在字符串对象中第一次出现的索引</span></span></span><br><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> start)</span>	<span class="comment">//从start开始截取字符串</span></span></span><br><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span>	<span class="comment">//从start开始，到end结束截取字符串。包括start，不包括end</span></span></span><br></pre></td></tr></table></figure>

<p><strong>2、代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestString</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建字符串对象</span></span><br><span class="line">        String s = <span class="string">"helloworld"</span>;</span><br><span class="line">        <span class="comment">// int length():获取字符串的长度，其实也就是字符个数</span></span><br><span class="line">        System.out.println(s.length());</span><br><span class="line">        System.out.println(<span class="string">"--------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// char charAt(int index):获取指定索引处的字符</span></span><br><span class="line">        System.out.println(s.charAt(<span class="number">0</span>));</span><br><span class="line">        System.out.println(s.charAt(<span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">"--------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// int indexOf(String str):获取str在字符串对象中第一次出现的索引</span></span><br><span class="line">        System.out.println(s.indexOf(<span class="string">"l"</span>));</span><br><span class="line">        System.out.println(s.indexOf(<span class="string">"owo"</span>));</span><br><span class="line">        System.out.println(s.indexOf(<span class="string">"ak"</span>));</span><br><span class="line">        System.out.println(<span class="string">"--------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// String substring(int start):从start开始截取字符串</span></span><br><span class="line">        System.out.println(s.substring(<span class="number">0</span>));</span><br><span class="line">        System.out.println(s.substring(<span class="number">5</span>));</span><br><span class="line">        System.out.println(<span class="string">"--------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// String substring(int start,int end):从start开始，到end结束截取字符串</span></span><br><span class="line">        System.out.println(s.substring(<span class="number">0</span>, s.length()));</span><br><span class="line">        System.out.println(s.substring(<span class="number">3</span>, <span class="number">8</span>));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">--------</span></span><br><span class="line"><span class="comment">h</span></span><br><span class="line"><span class="comment">e</span></span><br><span class="line"><span class="comment">--------</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">-1</span></span><br><span class="line"><span class="comment">--------</span></span><br><span class="line"><span class="comment">helloworld</span></span><br><span class="line"><span class="comment">world</span></span><br><span class="line"><span class="comment">--------</span></span><br><span class="line"><span class="comment">helloworld</span></span><br><span class="line"><span class="comment">lowor</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="3、String的判断功能"><a href="#3、String的判断功能" class="headerlink" title="3、String的判断功能"></a>3、String的判断功能</h2><p><strong>1、常用方法</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　boolean equals(Object obj)：比较字符串的内容是否相同</span><br><span class="line">　　boolean equalsIgnoreCase(String str)： 比较字符串的内容是否相同,忽略大小写</span><br><span class="line">　　boolean startsWith(String str)： 判断字符串对象是否以指定的str开头</span><br><span class="line">　　boolean endsWith(String str)： 判断字符串对象是否以指定的str结尾</span><br></pre></td></tr></table></figure>

<p> <strong>2、代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestString</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">           <span class="comment">// 创建字符串对象</span></span><br><span class="line">        String s1 = <span class="string">"hello"</span>;</span><br><span class="line">        String s2 = <span class="string">"hello"</span>;</span><br><span class="line">        String s3 = <span class="string">"Hello"</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// boolean equals(Object obj):比较字符串的内容是否相同</span></span><br><span class="line">        System.out.println(s1.equals(s2));</span><br><span class="line">        System.out.println(s1.equals(s3));</span><br><span class="line">        System.out.println(<span class="string">"-----------"</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// boolean equalsIgnoreCase(String str):比较字符串的内容是否相同,忽略大小写</span></span><br><span class="line">        System.out.println(s1.equalsIgnoreCase(s2));</span><br><span class="line">        System.out.println(s1.equalsIgnoreCase(s3));</span><br><span class="line">        System.out.println(<span class="string">"-----------"</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// boolean startsWith(String str):判断字符串对象是否以指定的str开头</span></span><br><span class="line">        System.out.println(s1.startsWith(<span class="string">"he"</span>));</span><br><span class="line">        System.out.println(s1.startsWith(<span class="string">"ll"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">false</span></span><br><span class="line"><span class="comment">-----------</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">-----------</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">false</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h1 id="四、String类与其他结构之间的转换"><a href="#四、String类与其他结构之间的转换" class="headerlink" title="四、String类与其他结构之间的转换"></a>四、String类与其他结构之间的转换</h1><h2 id="1、-String-与-char-之间的转换"><a href="#1、-String-与-char-之间的转换" class="headerlink" title="1、 String 与 char[]之间的转换"></a>1、 String 与 char[]之间的转换</h2><p>String –&gt; char[]: <strong>调用String的toCharArray()</strong><br>char[] –&gt; String: <strong>调用String的构造器</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">   String str1 = <span class="string">"abc123"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">char</span>[] charArray = str1.toCharArray();</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charArray.length; i++) &#123;</span><br><span class="line">   System.out.println(charArray[i]);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">char</span>[] arr = <span class="keyword">new</span> <span class="keyword">char</span>[]&#123;<span class="string">'h'</span>,<span class="string">'e'</span>,<span class="string">'l'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>&#125;;</span><br><span class="line">   String str2 = <span class="keyword">new</span> String(arr);</span><br><span class="line">   System.out.println(str2);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="2、String-与基本数据类型、包装类之间的转换"><a href="#2、String-与基本数据类型、包装类之间的转换" class="headerlink" title="2、String 与基本数据类型、包装类之间的转换"></a>2、String 与基本数据类型、包装类之间的转换</h2><p> String –&gt; 基本数据类型、包装类：<strong>调用包装类的静态方法：parseXxx(str)</strong><br> 基本数据类型、包装类 –&gt; String: <strong>调用String重载的valueOf(xxx)</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String str1 = <span class="string">"123"</span>;</span><br><span class="line"><span class="comment">//        int num = (int)str1;	//错误的</span></span><br><span class="line">        <span class="keyword">int</span> num = Integer.parseInt(str1);</span><br><span class="line"></span><br><span class="line">        String str2 = String.valueOf(num);<span class="comment">//"123"</span></span><br><span class="line">        String str3 = num + <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(str1 == str3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3、-String-与-byte-之间的转换"><a href="#3、-String-与-byte-之间的转换" class="headerlink" title="3、 String 与 byte[]之间的转换"></a>3、 String 与 byte[]之间的转换</h2><p>编码：String –&gt; byte[]: <strong>调用String的getBytes()</strong><br>解码：byte[] –&gt; String: <strong>调用String的构造器</strong></p>
<p>说明：解码时，要求解码使用的字符集必须与编码时使用的字符集一致，否则会出现乱码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line">       String str1 = <span class="string">"abc123中国"</span>;</span><br><span class="line">       <span class="keyword">byte</span>[] bytes = str1.getBytes();<span class="comment">//使用默认的字符集，进行编码。</span></span><br><span class="line">       System.out.println(Arrays.toString(bytes));</span><br><span class="line"></span><br><span class="line">       <span class="keyword">byte</span>[] gbks = str1.getBytes(<span class="string">"gbk"</span>);<span class="comment">//使用gbk字符集进行编码。</span></span><br><span class="line">       System.out.println(Arrays.toString(gbks));</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">"******************"</span>);</span><br><span class="line"></span><br><span class="line">       String str2 = <span class="keyword">new</span> String(bytes);<span class="comment">//使用默认的字符集，进行解码。</span></span><br><span class="line">       System.out.println(str2);</span><br><span class="line"></span><br><span class="line">       String str3 = <span class="keyword">new</span> String(gbks);</span><br><span class="line">       System.out.println(str3);<span class="comment">//出现乱码。原因：编码集和解码集不一致！</span></span><br><span class="line">       String str4 = <span class="keyword">new</span> String(gbks, <span class="string">"gbk"</span>);</span><br><span class="line">       System.out.println(str4);<span class="comment">//没有出现乱码。原因：编码集和解码集一致！</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础（包装类）</title>
    <url>/2020/04/22/Java%E5%9F%BA%E7%A1%80%EF%BC%88%E5%8C%85%E8%A3%85%E7%B1%BB%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、包装类概述"><a href="#一、包装类概述" class="headerlink" title="一、包装类概述"></a>一、包装类概述</h1><blockquote>
<p> Java语言是一个面向对象的语言，但是Java中的基本数据类型却是不面向对象的，这在实际使用时存在很多的不便，为了解决这个不足，在设计类时为每个基本数据类型设计了一个对应的类进行代表，这样八个和基本数据类型对应的类统称为包装类(Wrapper Class) , 包装类和基本数据类型的对应关系如下表所示： </p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">基本数据类型</th>
<th align="center">包装类</th>
</tr>
</thead>
<tbody><tr>
<td align="center">byte</td>
<td align="center">Byte</td>
</tr>
<tr>
<td align="center">boolean</td>
<td align="center">Boolean</td>
</tr>
<tr>
<td align="center">short</td>
<td align="center">Short</td>
</tr>
<tr>
<td align="center">char</td>
<td align="center"><span style="color:red">Character</span></td>
</tr>
<tr>
<td align="center">int</td>
<td align="center"><span style="color:red">Integer</span></td>
</tr>
<tr>
<td align="center">long</td>
<td align="center">Long</td>
</tr>
<tr>
<td align="center">float</td>
<td align="center">Float</td>
</tr>
<tr>
<td align="center">double</td>
<td align="center">Double</td>
</tr>
</tbody></table>
<p>在这八个类名中，除了Integer和Character类以后，其它六个类的类名和基本数据类型一直，只是类名的第一个字母大写即可。 </p>
<h1 id="二、基本数据类型与包装类的互转"><a href="#二、基本数据类型与包装类的互转" class="headerlink" title="二、基本数据类型与包装类的互转"></a>二、基本数据类型与包装类的互转</h1><ul>
<li><p>基本数据类型——&gt;包装类：使用包装类的构造器</p>
</li>
<li><p>包装类——&gt;基本数据类型：调用包装类的 xxxValue( )</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">Integer in = <span class="keyword">new</span> Integer(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将int类型转换为Integer类型</span></span><br><span class="line"></span><br><span class="line">Integer in1 = <span class="keyword">new</span> Integer(n);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将Integer类型的对象转换为int类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m = in.intValue();</span><br></pre></td></tr></table></figure>



<h1 id="三、自动装箱与拆箱"><a href="#三、自动装箱与拆箱" class="headerlink" title="三、自动装箱与拆箱"></a>三、自动装箱与拆箱</h1><p> JDK自从1.5(5.0)版本以后，就引入了自动拆装箱的语法，也就是在进行基本数据类型和对应的包装类转换时，系统将自动进行。使用示例代码如下： </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//int类型会自动转换为Integer类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">Integer in = m;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Integer类型会自动转换为int类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = in;</span><br></pre></td></tr></table></figure>

<p> 所以在实际使用时的类型转换将变得很简单，系统将自动实现对应的转换。 </p>
<h1 id="四、基本数据类型包装类与String类型互转"><a href="#四、基本数据类型包装类与String类型互转" class="headerlink" title="四、基本数据类型包装类与String类型互转"></a>四、基本数据类型包装类与String类型互转</h1><p>基本数据类型包装类——&gt;String类型：调用String重载的valueOf(xxx)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> num = <span class="number">2017</span>;</span><br><span class="line"><span class="comment">//方式1：连接运算</span></span><br><span class="line">String time= <span class="string">""</span>+num;         <span class="comment">//右边最终结果是String</span></span><br><span class="line"><span class="comment">//方式2：调用String的valueOf(xxx)</span></span><br><span class="line">String str = String.valueOf(num);  <span class="comment">//结果是 "2017"</span></span><br><span class="line"></span><br><span class="line">String str1 = <span class="string">"123"</span>;</span><br><span class="line"><span class="keyword">int</span> value1 = Integer.valueOf(str1);<span class="comment">//结果是int 123</span></span><br></pre></td></tr></table></figure>

<p>String类型——&gt;基本数据类型包装类：调用包装类的parseXxx(String s)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">"123"</span>;</span><br><span class="line"><span class="keyword">int</span> num1 = Integer.parseInt(str); <span class="comment">//结果是 123</span></span><br></pre></td></tr></table></figure>



<h1 id="五、Java包装类的一些常见知识点归纳"><a href="#五、Java包装类的一些常见知识点归纳" class="headerlink" title="五、Java包装类的一些常见知识点归纳"></a>五、Java包装类的一些常见知识点归纳</h1><ul>
<li><strong>Java包装类常量池</strong><br>Java的8种基本类型(Byte, Short, Integer, Long, Character, Boolean, Float, Double), 除Float和Double以外, 其它六种都实现了常量池, 但是它们只在<strong>大于等于-128并且小于等于127</strong>时才使用常量池。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        <span class="comment">//常量池的测试</span></span><br><span class="line">        System.out.println(<span class="string">"Integer的测试"</span>);</span><br><span class="line">        Integer a = <span class="number">127</span>;  </span><br><span class="line">        Integer b = <span class="number">127</span>;   </span><br><span class="line">        System.out.println(a == b);  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        a = <span class="number">128</span>;  </span><br><span class="line">        b = <span class="number">128</span>;   </span><br><span class="line">        System.out.println(a == b);   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        a = -<span class="number">128</span>;  </span><br><span class="line">        b = -<span class="number">128</span>;   </span><br><span class="line">        System.out.println(a == b);  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        a = -<span class="number">129</span>;  </span><br><span class="line">        b = -<span class="number">129</span>;   </span><br><span class="line">        System.out.println(a == b);  <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试Boolean  </span></span><br><span class="line">        System.out.println(<span class="string">"测试Boolean"</span>);  </span><br><span class="line">        Boolean c = <span class="keyword">true</span>;  </span><br><span class="line">        Boolean d = <span class="keyword">true</span>;  </span><br><span class="line">        System.out.println(c == d);  <span class="comment">//true</span></span><br><span class="line">        d = <span class="keyword">new</span> Boolean(<span class="keyword">true</span>);  </span><br><span class="line">        System.out.println(c == d);  <span class="comment">//false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础（多态性相关）</title>
    <url>/2020/04/22/Java%E5%9F%BA%E7%A1%80%EF%BC%88%E5%A4%9A%E6%80%81%E6%80%A7%E7%9B%B8%E5%85%B3%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、什么是多态"><a href="#一、什么是多态" class="headerlink" title="一、什么是多态"></a>一、什么是多态</h1><p>1、 <strong>多态</strong>是继封装、继承之后，面向对象的第三大特性。</p>
<p>2、理解多态性：可以理解为一个事物的多种形态。 如Student类继承了Person类，一个Student的对象便既是Student，又是Person。 </p>
<p>3、 何为多态性：多态性体现在 <strong>父类的引用指向子类的对象</strong></p>
<p>4、多态的使用：<strong>当调用子父类同名同参的方法时，实际执行的是子类重写父类的方法（虚拟方法调用）</strong></p>
<p>5、多态的定义格式：<code>父类类型 变量名 = new 子类类型( );</code></p>
<h1 id="二、多态中成员特点"><a href="#二、多态中成员特点" class="headerlink" title="二、多态中成员特点"></a>二、多态中成员特点</h1><p>1、多态成员变量：<strong>编译、运行看左边</strong>（多态性不适用于属性）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Fu f = <span class="keyword">new</span> Zi();</span><br><span class="line">System.out.println(f.num);	<span class="comment">//f是Fu中的值，只能取到父类中的值</span></span><br></pre></td></tr></table></figure>

<p> 2、多态成员方法：<strong>编译看左边，运行看右边</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Fu f1 = <span class="keyword">new</span> Zi();</span><br><span class="line">System.out.println(f1.show());	<span class="comment">//f1的编译类型是Fu,但实际运行时是Zi,所以调用的是子类重写后的方法。</span></span><br></pre></td></tr></table></figure>

<h1 id="三、多态是运行时行为"><a href="#三、多态是运行时行为" class="headerlink" title="三、多态是运行时行为"></a>三、多态是运行时行为</h1><p>如何证明多态是 <em>编译时行为</em> 还是 <em>运行时行为</em> ？</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DuoTai</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Animal <span class="title">getInstance</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Dog();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Cat();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> key = <span class="keyword">new</span> Random().nextInt(<span class="number">2</span>);</span><br><span class="line">        System.out.println(key);</span><br><span class="line">        Animal animal = getInstance(key);</span><br><span class="line">        animal.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"animal eat food"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Dog eats bone"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span>  <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Cat eats fish"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 1</span><br><span class="line">&gt; Cat eats fish</span><br></pre></td></tr></table></figure>

<p>可见，多态是一种动态绑定，运行时行为。</p>
<h1 id="四、多态的向下和向上转型"><a href="#四、多态的向下和向上转型" class="headerlink" title="四、多态的向下和向上转型"></a>四、多态的向下和向上转型</h1><h2 id="1、向上转型"><a href="#1、向上转型" class="headerlink" title="1、向上转型"></a>1、<strong>向上转型</strong></h2><p>​    多态本身就是向上转型过的过程。</p>
<p>​     使用格式：<code>父类类型 变量名 = new 子类类型();</code></p>
<p>​     适用场景：当不需要面对子类类型时，通过提高扩展性，或者使用父类的功能就能完成相应的操作。</p>
<blockquote>
<p>有了对象的多态性以后，内存中实际上是加载了子类的属性和方法的，但是由于变量声明为父类类型，导致编译时，只能调用父类中声明的属性和方法。子类特有的属性和声明不能调用。</p>
</blockquote>
<p>​    </p>
<p>​    那么如何才能调用子类特有的属性和方法呢？可以利用多态的<strong>向下转型</strong></p>
<h2 id="2、向下转型"><a href="#2、向下转型" class="headerlink" title="2、向下转型"></a>2、<strong>向下转型</strong></h2><p>一个已经向上转型的子类对象可以使用<strong>强制类型转换</strong>的格式，将父类引用类型转为子类引用各类型。</p>
<p>​     使用格式：<code>子类类型 变量名=（子类类型） 父类类型的变量；</code></p>
<p>​     适用场景：当要使用子类特有功能时。</p>
<p>不过在使用强转时，可能会出现ClassCastException的异常，所以通常在强转时会利用instanceof关键字进行判断,返回true就进行向下转型。</p>
<h1 id="五、instanceof的使用"><a href="#五、instanceof的使用" class="headerlink" title="五、instanceof的使用"></a>五、instanceof的使用</h1><p> 作用：用来判断某个对象是否属于某种数据类型。</p>
<ul>
<li>注意： 返回类型为布尔类型</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Fu f1=<span class="keyword">new</span> Zi();</span><br><span class="line">Fu f2=<span class="keyword">new</span> Son(); </span><br><span class="line"><span class="keyword">if</span>(f1 <span class="keyword">instanceof</span> Zi) &#123;</span><br><span class="line">	System.out.println(<span class="string">"f1是Zi的类型"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"> System.out.println(<span class="string">"f1是Son的类型"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>如果 <code>a instanceof A</code>返回true，则<code>a instanceof B</code>也返回true，其中，类B是类A的父类。</li>
<li>要求a所属的类与类A必须是子类和父类的关系，否则编译错误。</li>
</ul>
<h1 id="六、练习"><a href="#六、练习" class="headerlink" title="六、练习"></a>六、练习</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Sub s = <span class="keyword">new</span> Sub();</span><br><span class="line">        System.out.println(s.count);    <span class="comment">//20</span></span><br><span class="line">        s.display();    <span class="comment">//20</span></span><br><span class="line"></span><br><span class="line">        Base b = s; <span class="comment">//多态</span></span><br><span class="line">        System.out.println(b == s); <span class="comment">//true</span></span><br><span class="line">        System.out.println(b.count);    <span class="comment">//10</span></span><br><span class="line">        b.display();    <span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sub</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS布局指南</title>
    <url>/2020/04/21/CSS%E5%B8%83%E5%B1%80%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>在前端开发中，css页面布局部分是书写样式代码的重点和难点，这篇文章总结了一些页面布局的实现方案。</p>
</blockquote>
<h1 id="居中相关"><a href="#居中相关" class="headerlink" title="居中相关"></a>居中相关</h1><h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><p>示例：</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@cssbuju/picture/%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD.jpg" alt=""> </p>
<h3 id="方案一：inline-block-text-align"><a href="#方案一：inline-block-text-align" class="headerlink" title="方案一：inline-block + text-align"></a>方案一：inline-block + text-align</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>分析：子元素设置display为inline-block，其具有文本元素的性质，其父元素可以通过设置文本对齐属性text-align来控制其在行内的对齐方式，<code>text-align: center</code>即为水平对齐。</p>
<p><span style="color:red">注意</span>：text-align属性是具有继承性的，会导致自己元素内部的文本也是居中显示的，需要自身设置text-align覆盖。</p>
<h3 id="方案二：定位-transform"><a href="#方案二：定位-transform" class="headerlink" title="方案二：定位 + transform"></a>方案二：定位 + transform</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">           position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 50%;top: 0;</span><br><span class="line">            transform: translateX(-50%);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>分析：父元素开启定位（relative，absolute,fixed都可以）后，子元素设置绝对定位absolute后，left设置为50%，再使用<code>transform: translateX(-50%)</code>将子元素往反方向移动自身宽度的50%，便完成水平居中。</p>
<p><span style="color:red">注意</span>：父级元素是否脱离文档流，不影响子元素水平居中效果，但是transform是CSS3属性，存在浏览器兼容问题。</p>
<h3 id="方案三：display-block-margin-0-auto"><a href="#方案三：display-block-margin-0-auto" class="headerlink" title="方案三：display: block + margin: 0 auto"></a>方案三：display: block + margin: 0 auto</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">            display: block;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>分析：这个方法只需要对子元素进行设置就可以实现水平居中，margin设置auto表示浏览器会自动分配，实现内外边距等分效果。</p>
<p><span style="color:red">注意</span>：这里子元素设置display为block或者table都是可以的，如果子元素脱离文档流（浮动，定位），会导致margin属性的值无效。</p>
<h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><p>示例：</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@cssbuju/picture/%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD.jpg" alt=""></p>
<h3 id="方案一：-定位-transform"><a href="#方案一：-定位-transform" class="headerlink" title="方案一： 定位 + transform"></a>方案一： 定位 + transform</h3><p> 这种方案和之前水平居中布局的方案二是同样的原理，不在赘述 。</p>
<h3 id="方案二：display-table-cell-vertical-align"><a href="#方案二：display-table-cell-vertical-align" class="headerlink" title="方案二：display: table-cell + vertical-align"></a>方案二：display: table-cell + vertical-align</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 400px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">            display: table-cell;</span><br><span class="line">            vertical-align: middle;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>分析：设置<code>display: table-cell</code>的元素具有 td元素 的行为，它的子元素布局方式类似文本元素，可以在父元素使用<code>vertical-align: middle</code>实现子元素的垂直居中。</p>
<p><span style="color:red">注意</span>：vertical-align属性具有继承性，导致父元素内文本也是垂直居中显示的。</p>
<h2 id="水平垂直居中"><a href="#水平垂直居中" class="headerlink" title="水平垂直居中"></a>水平垂直居中</h2><p>示例：</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@cssbuju/picture/%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD.jpg" alt=""> </p>
<h3 id="方案一：定位-transform"><a href="#方案一：定位-transform" class="headerlink" title="方案一：定位 + transform"></a>方案一：定位 + transform</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;left: 50%;</span><br><span class="line">            transform: translate(-50%,-50%);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="方案二：-结合水平布局方案三，垂直布局方案二"><a href="#方案二：-结合水平布局方案三，垂直布局方案二" class="headerlink" title="方案二： 结合水平布局方案三，垂直布局方案二"></a>方案二： 结合水平布局方案三，垂直布局方案二</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">            display: table-cell;</span><br><span class="line">            vertical-align: middle;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="方案三：使用绝对定位盒子的特性"><a href="#方案三：使用绝对定位盒子的特性" class="headerlink" title="方案三：使用绝对定位盒子的特性"></a>方案三：使用绝对定位盒子的特性</h3><blockquote>
<p> 绝对定位盒子的特性： 高宽由其内容撑开</p>
<ul>
<li>水平方向： left + right + width + padding + margin = 包含块padding区域的尺寸 </li>
<li>垂直方向： top + bottom + height + padding + margin = 包含块padding区域的尺寸 </li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="方案四：使用flex进行居中布局"><a href="#方案四：使用flex进行居中布局" class="headerlink" title="方案四：使用flex进行居中布局"></a>方案四：使用flex进行居中布局</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">            display: flex;</span><br><span class="line">            align-items: center;</span><br><span class="line">            justify-content: center;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>分析：使用flex，水平垂直居中会变得非常容易，默认情况下，<code>align-items: center</code>垂直居中（交叉轴排列方式），<code>justify-content: center</code>水平居中（主轴排列方式）注意：需要考虑浏览器兼容性问题。</p>
<h1 id="N栏布局"><a href="#N栏布局" class="headerlink" title="N栏布局"></a>N栏布局</h1><h2 id="两栏布局"><a href="#两栏布局" class="headerlink" title="两栏布局"></a>两栏布局</h2><blockquote>
<p>其中一列是定宽元素，另一列元素宽度自适应。比如，我们实现左列定宽，右列自适应的布局。 </p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@3.0/picture/%E5%8F%8C%E6%A0%8F%E5%B8%83%E5%B1%80.jpg" alt=""></p>
<h3 id="方案一：左边元素浮动，定宽，右边元素设置overflow-hidden"><a href="#方案一：左边元素浮动，定宽，右边元素设置overflow-hidden" class="headerlink" title="方案一：左边元素浮动，定宽，右边元素设置overflow:hidden"></a>方案一：左边元素浮动，定宽，右边元素设置<code>overflow:hidden</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bfa</span>;</span></span><br><span class="line">           overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span>定宽<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span>自适应<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>分析：右边元素由于设置<code>overflow: hidden</code>开启BFC，与外界隔离，所以能实现效果。</p>
<p><span style="color:red">注意</span>：<code>overflow: hidden</code>的设置也使得右边元素内容超出隐藏。这里如果不设置<code>overflow: hidden</code>，右边元素的宽度是100%，有一部分被左边浮动元素盖住，不是我们要的结果，虽然看起来没什么区别。</p>
<h3 id="方案二：左边元素浮动，定宽，右边元素设置margin-left"><a href="#方案二：左边元素浮动，定宽，右边元素设置margin-left" class="headerlink" title="方案二：左边元素浮动，定宽，右边元素设置margin-left"></a>方案二：左边元素浮动，定宽，右边元素设置margin-left</h3><p>分析：一个最简单的做法，左边元素设置浮动，定宽，右边元素的margin-left设置为左边元素宽度大小。</p>
<h3 id="方案三：flex布局"><a href="#方案三：flex布局" class="headerlink" title="方案三：flex布局"></a>方案三：flex布局</h3><p>分析：父容器采用flex布局，左边元素定宽之后，右边元素，因为只有一个，所以flex属性设置为不是0的正值（也就是设置flex-grow），都会占满剩余空间。</p>
<h2 id="三栏布局"><a href="#三栏布局" class="headerlink" title="三栏布局"></a>三栏布局</h2><blockquote>
<p>这里的三栏布局，主要分三种情况介绍，第一种是普通三列布局，还有两种是比较有名的圣杯布局和双飞翼布局（两者都是实现一个两侧宽度固定，中间宽度自适应的三列布局，区别在于双飞翼布局比起圣杯布局，中间元素会多一个子元素，而左右元素需要定位relative） </p>
</blockquote>
<h3 id="普通三栏布局"><a href="#普通三栏布局" class="headerlink" title="普通三栏布局"></a>普通三栏布局</h3><blockquote>
<p> 左中两列定宽，右边一列自适应的布局，实际上和前面的两栏布局是类似的。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS3</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>以太坊开发——Truffle的介绍与使用</title>
    <url>/2020/02/16/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%BC%80%E5%8F%91%E2%80%94%E2%80%94Truffle%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​        </p>
<p>最近在跟老师做区块链方向的项目，奈何自己的知识面太窄，没学过前端，对于常用的web3，JavaScript等都不够熟悉，在做项目过程中经常碰壁，还找不到解决方法，多番几次遇到无从下手的问题！ε=(´ο｀*)))唉，心酸，终究自己现在还不是一个大佬。不管怎样，还是一项一项任务学习解决吧，不然可能花了大量时间，还一事无成！</p>
<p>接下来谈一谈在以太坊开发中Truffle的使用，加深一下自己的理解。</p>
<hr>
<h1 id="Truffle的简介"><a href="#Truffle的简介" class="headerlink" title="Truffle的简介"></a>Truffle的简介</h1><p>Truffle是目前最流行的以太坊DApp开发框架，使用了EVM的区块链的资产管理通道，它基于JavaScript，可以让在以太坊上的开发变得简单。Truffle有以下特点：</p>
<ul>
<li>内置的智能合约编译，链接，部署和二进制文件的管理。</li>
<li>快速开发下的自动合约测试。</li>
<li>脚本化的，可扩展的部署与发布框架。</li>
<li>部署到不管多少的公网或私网的网络环境管理功能</li>
<li>使用EthPM&amp;NPM提供的包管理，使用ERC190标准。</li>
<li>与合约直接通信的直接交互控制台（写完合约就可以命令行里验证了）。</li>
<li>可配的构建流程，支持紧密集成。</li>
<li>在Truffle环境里支持执行外部的脚本。</li>
</ul>
<h1 id="Truffle的客户端"><a href="#Truffle的客户端" class="headerlink" title="Truffle的客户端"></a>Truffle的客户端</h1><p>我们在做项目时写的智能合约都必须部署在链上才能够进行测试，所以利用Truffle构建DApp也是必须选择一条链来部署。我们可以选用一些公共测试链如Rinkeby或者Ropsten，不过在部署过程中需要花费代币，代币可以从已有的免费水龙头网站中获取，但是速度慢，且不易实现（反正我是没有弄到代币(눈‸눈)。另外，也就是我们一般是采用部署到私链上（如何自己创建一条私链，下次进行补充）。Truffle客户端推荐使用以下两种客户端：</p>
<ul>
<li>Ganache</li>
<li>truffle develop</li>
</ul>
<p>Ganache的前身是testrpc，它可以为我们提供 10 个账户，每个账户有 100 个以太，为我们测试所用。这些账户可以当做存钱的银行账户，里面默认有10个货币，（以太（Ether，ETH）就是以太坊生态系统中的 钱/货币）。你需要用这个账户创建交易，发送/接收以太。而truffle develop是truffle内置的客户端，是以ganache为内核，跟命令行版本的Ganache类似，它也可以给我们提供10个账户，唯一注意的是在truffle develop里执行truffle命令时需要省略前面的“truffle“，比如“truffle compile”只需要敲“compile”就可以了。</p>
<h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><h2 id="安装truffle-ganache开发和测试环境"><a href="#安装truffle-ganache开发和测试环境" class="headerlink" title="安装truffle+ganache开发和测试环境"></a>安装truffle+ganache开发和测试环境</h2><p>truffle是开发环境，ganache是测试环境（部署合约），工作在64位Ubuntu中。</p>
<p><strong>以下命令建议全部使用sudo运行</strong>。</p>
<hr>
<ul>
<li><p>安装git<br><code>apt-get update</code><br><code>apt-get install git</code></p>
</li>
<li><p>安装nodejs环境</p>
<p><code>apt-get install nodejs</code><br><code>apt-get install npm</code></p>
<p>（可以用以下命令将nodejs更新到最新版本</p>
</li>
</ul>
<p><code>npm install -g n</code><br><code>n stable</code></p>
<p>）</p>
<ul>
<li><p>安装truffle</p>
<p><code>npm install -g truffle</code></p>
</li>
<li><p>安装ganache</p>
<p><code>npm install -g ganache-cli</code>  </p>
</li>
</ul>
<hr>
<p>好了，基本配置暂时就到这里，我们接下来打开虚拟机终端，输入<code>ganache-cli</code>就可以得到10个默认账户和它的私钥了！ 并注意看到ganache的监听的端口为8545！ </p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Truffle/picture/p1.png" alt=""></p>
<h1 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h1><p>首先我们创建一个空目录，在下面创建一个truffle项目：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;mkdir test</span><br><span class="line">&gt;cd test</span><br><span class="line">&gt;truffle init</span><br></pre></td></tr></table></figure>

<p>完成后，你将可以得到以下目录：</p>
<ul>
<li>app/ ： 你的应用文件运行的默认目录。这里面包括推荐的javascript文件和css样式文件目录，但你可以完全决定如何使用这些目录。</li>
<li>contracts/ ：Truffle默认的合约文件存放地址。</li>
<li>migrations/ ： 存放发布脚本文件</li>
<li>test/ ：用来测试应用和合约的测试文件</li>
<li>truffle-config.js/ ： Truffle的配置文件</li>
</ul>
<p>这些是执行truffle init时在当前目录初始化的一个构建在以太坊内的代币demo应用， 我们可以使用这个工程来进行快速的学习，或者你也可以删除这些文件来创建一个你自己的工程。 </p>
<p><strong>但是，在此版本中，truffle init有问题，这里不推荐使用此种方式来初始化工程，我们一般这样操作</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;npm install -g webpack</span><br><span class="line">&gt;truffle unbox webpack</span><br></pre></td></tr></table></figure>

<p>这样我们就可以正确引入一个范例，其中truffle unbox是指直接下载一个truffle box ,即一个构建好的项目，就像一个封装好的一个盒子。unbox的过程会相对长一点，大约十几分钟左右。完成之后可以看到如下界面：</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Truffle/picture/p2.png" alt=""></p>
<p>在以后我们开发以太坊DApp时也建议使用此种方法引入范例，然后根据自己的需求进行更改里面的源码。</p>
<hr>
<p>我们打开contracts文件，可以看到里面存在3个合约，其中 Migrations.sol 是Truffle自己定义的一个合约文件，是用来管理应用合约的部署，因此请勿删除！另外两个合约是这个项目的有关代币发送的智能合约，我们可以根据自己需求进行更改或删除。</p>
<p>migrations文件夹，可以看到<strong><em>1_initial_migration.js</em></strong> 和 <strong><em>2_deploy_contracts.js</em></strong>两个文件，其中第一个文件的作用是向区块链部署 Migrations 合约。 这个合约的作用是存储并跟踪已经部署的最新合约。每次运行脚本时，truffle就会向区块链查询获取已部署好的合约，然后部署新的合约。部署完成后，这个脚本会更新 Migrations 合约中的last_completed_migration 字段指向最新部署的合约。我们可以简单地把 Migrations 合约当成是一个数据库表，字段last_completed_migration 总是保持最新状态。所以我们想要部署一个文件时，可以按照它的模式写。 <em>2_deploy_contracts.js</em>呢？我们需要在里面部署我们自己的智能合约，它是在前面的文件执行完成后才调用自己。因为truffle在执行migrate操作时，首先会检查migrations文件夹，然后依次按照文件名的编号进行部署。</p>
<p>在部署我们的合约之前，我们需要先打开truffle-config.js配置文件，<strong>打开8545端口</strong>，如图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Truffle/picture/p3.png" alt=""></p>
<p>一切准备就绪后，记得打开我们的ganache客户端，执行ganache-cli ,不要退出！然后我们依次进行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;truffle compile</span><br><span class="line">&gt;truffle migrate</span><br><span class="line">&gt;cd app</span><br><span class="line">&gt;npm run dev</span><br></pre></td></tr></table></figure>

<p>就可以通过<a href="http://localhost:8080" target="_blank" rel="noopener"></a>来运行我们的范例！</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Truffle/picture/p4.png" alt=""></p>
<p> 当我们掌握以上步骤后，就可以开发简单的智能合约了。我们会在以后的使用中，会发现越来越多ganache和truffle的功能。 </p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>区块链</tag>
        <tag>Truffle</tag>
      </tags>
  </entry>
  <entry>
    <title>图书管理系统（Java+MySQL实现）</title>
    <url>/2020/02/15/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88Java-MySQL%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><blockquote>
<p>​        本系统主要实现了JDBC对图书信息进行增删改查，结构分为读者登录、管理员登录。主要功能为读者登录可以浏览读者自己的借阅信息，可以对自己信息进行维护。管理员登录可以浏览图书的信息，显示当前数据库中书籍借阅情况，可以对图书信息进行维护。</p>
</blockquote>
<h1 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h1><ul>
<li><p>使用Java作为开发语言，Java Swing做图形界面，MySQL8作为数据库，IDE采用idea； </p>
</li>
<li><p>代码结构：</p>
<ul>
<li><p>sql（数据库层）-gui（界面交互层）-main（主函数）</p>
</li>
<li><p>sql层分为：</p>
<ul>
<li>DbUtil、</li>
<li>sql.entity（实体层）；</li>
<li>sql.api（接口层）；</li>
<li>sql.Achieve_api（api实现层）等。</li>
</ul>
</li>
<li><p>gui实现登录注册，管理员管理界面与读者界面的相互交互。</p>
</li>
</ul>
</li>
</ul>
<h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><h2 id="数据库的设计——建库建表语句"><a href="#数据库的设计——建库建表语句" class="headerlink" title="数据库的设计——建库建表语句"></a>数据库的设计——建库建表语句</h2><p><code>CREAT DATABASE 图书管理系统;</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> books</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `books`;</span><br><span class="line">CREATE TABLE `books`  (</span><br><span class="line">  `binit` <span class="keyword">int</span>(<span class="number">0</span>) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `bid` <span class="keyword">int</span>(<span class="number">0</span>) NOT NULL,</span><br><span class="line">  `bname` varchar(<span class="number">50</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  `bpress` varchar(<span class="number">30</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  `bauthor` varchar(<span class="number">100</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  `bprice` <span class="keyword">double</span>(<span class="number">11</span>, <span class="number">2</span>) NOT NULL,</span><br><span class="line">  `bsurplus` <span class="keyword">int</span>(<span class="number">0</span>) NULL DEFAULT NULL,</span><br><span class="line">  `blend` <span class="keyword">int</span>(<span class="number">0</span>) NULL DEFAULT NULL,</span><br><span class="line">  <span class="function">PRIMARY <span class="title">KEY</span> <span class="params">(`binit`)</span> USING BTREE,</span></span><br><span class="line"><span class="function">  INDEX `bid`<span class="params">(`bid`)</span> USING BTREE</span></span><br><span class="line"><span class="function">) ENGINE </span>= InnoDB AUTO_INCREMENT = <span class="number">43229</span> CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> root</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `root`;</span><br><span class="line">CREATE TABLE `root`  (</span><br><span class="line">  `rid` <span class="keyword">int</span>(<span class="number">0</span>) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `rname` varchar(<span class="number">30</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  `rpassword` varchar(<span class="number">30</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  <span class="function">PRIMARY <span class="title">KEY</span> <span class="params">(`rid`)</span> USING BTREE</span></span><br><span class="line"><span class="function">) ENGINE </span>= InnoDB AUTO_INCREMENT = <span class="number">4</span> CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `user`;</span><br><span class="line">CREATE TABLE `user`  (</span><br><span class="line">  `ubinit` <span class="keyword">int</span>(<span class="number">0</span>) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `ubid` <span class="keyword">int</span>(<span class="number">0</span>) NOT NULL,</span><br><span class="line">  `ubname` varchar(<span class="number">100</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  `ubpress` varchar(<span class="number">30</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  `ubprice` decimal(<span class="number">10</span>, <span class="number">2</span>) NOT NULL,</span><br><span class="line">  `ubauthor` varchar(<span class="number">100</span>) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,</span><br><span class="line">  <span class="function">PRIMARY <span class="title">KEY</span> <span class="params">(`ubinit`)</span> USING BTREE</span></span><br><span class="line"><span class="function">) ENGINE </span>= InnoDB AUTO_INCREMENT = <span class="number">29</span> CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> userid</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `userid`;</span><br><span class="line">CREATE TABLE `userid`  (</span><br><span class="line">  `uid` <span class="keyword">int</span>(<span class="number">0</span>) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `uname` varchar(<span class="number">30</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,</span><br><span class="line">  `upassword` varchar(<span class="number">30</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,</span><br><span class="line">  <span class="function">PRIMARY <span class="title">KEY</span> <span class="params">(`uid`)</span> USING BTREE</span></span><br><span class="line"><span class="function">) ENGINE </span>= InnoDB AUTO_INCREMENT = <span class="number">3</span> CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>



<h2 id="Dbutil类——实现了连接数据库等操作（对jdbc进行封装）"><a href="#Dbutil类——实现了连接数据库等操作（对jdbc进行封装）" class="headerlink" title="Dbutil类——实现了连接数据库等操作（对jdbc进行封装）"></a>Dbutil类——实现了连接数据库等操作（对jdbc进行封装）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Level;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/图书管理系统?characterEncoding=utf-8&amp;serverTimezone=UTC"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection con = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Statement smt = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//连接数据库</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Connection <span class="title">createConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            <span class="keyword">return</span> DriverManager.getConnection(URL, <span class="string">"root"</span>, <span class="string">"admin"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (java.lang.ClassNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Can't load Driver"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//更新数据库</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">runUpdate</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (con == <span class="keyword">null</span>) &#123;</span><br><span class="line">            con = createConnection();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (smt == <span class="keyword">null</span>) &#123;</span><br><span class="line">            smt = con.createStatement();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        count = smt.executeUpdate(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (smt != <span class="keyword">null</span>) &#123;</span><br><span class="line">            smt.close();</span><br><span class="line">            smt = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">            con.close();</span><br><span class="line">            con = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultSet <span class="title">runQuery</span><span class="params">(String sql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (con == <span class="keyword">null</span>) &#123;</span><br><span class="line">            con = createConnection();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (smt == <span class="keyword">null</span>) &#123;</span><br><span class="line">            smt = con.createStatement();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> smt.executeQuery(sql);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">realeaseAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">                rs = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (smt != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                smt.close();</span><br><span class="line">                smt = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (con != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                con.close();</span><br><span class="line">                con = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                Logger.getLogger(DbUtil<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>()).<span class="title">log</span>(<span class="title">Level</span>.<span class="title">SEVERE</span>, <span class="title">null</span>, <span class="title">ex</span>)</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关闭数据库</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeConnection</span><span class="params">(Connection conn)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"..."</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">                conn = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="实体entity"><a href="#实体entity" class="headerlink" title="实体entity"></a>实体entity</h2><h3 id="Books-java"><a href="#Books-java" class="headerlink" title="- Books.java"></a>- Books.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Books</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> binit;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> bid;</span><br><span class="line">    <span class="keyword">private</span> String bname;</span><br><span class="line">    <span class="keyword">private</span> String bpress;</span><br><span class="line">    <span class="keyword">private</span> String bauthor;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> bprice;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> blend;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> bsurplus;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Books</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Books</span><span class="params">(<span class="keyword">int</span> bid, String bname, String bpress, String bauthor, <span class="keyword">double</span> bprice, <span class="keyword">int</span> blend, <span class="keyword">int</span> bsurplus)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bid = bid;</span><br><span class="line">        <span class="keyword">this</span>.bname = bname;</span><br><span class="line">        <span class="keyword">this</span>.bpress = bpress;</span><br><span class="line">        <span class="keyword">this</span>.bauthor = bauthor;</span><br><span class="line">        <span class="keyword">this</span>.bprice = bprice;</span><br><span class="line">        <span class="keyword">this</span>.blend = blend;</span><br><span class="line">        <span class="keyword">this</span>.bsurplus = bsurplus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBinit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> binit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBinit</span><span class="params">(<span class="keyword">int</span> binit)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.binit = binit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBid</span><span class="params">(<span class="keyword">int</span> bid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bid = bid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBname</span><span class="params">(String bname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bname = bname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBpress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bpress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBpress</span><span class="params">(String bpress)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bpress = bpress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBauthor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bauthor;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBauthor</span><span class="params">(String bauthor)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bauthor = bauthor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getBprice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bprice;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBprice</span><span class="params">(<span class="keyword">double</span> bprice)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bprice = bprice;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBlend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blend;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlend</span><span class="params">(<span class="keyword">int</span> blend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blend = blend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBsurplus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bsurplus;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBsurplus</span><span class="params">(<span class="keyword">int</span> bsurplus)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bsurplus = bsurplus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Root-java"><a href="#Root-java" class="headerlink" title="- Root.java"></a>- Root.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Root</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rid;</span><br><span class="line">    <span class="keyword">private</span> String rname;</span><br><span class="line">    <span class="keyword">private</span> String rpassword;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Root</span><span class="params">(<span class="keyword">int</span> rid, String rname, String rpassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rid = rid;</span><br><span class="line">        <span class="keyword">this</span>.rname = rname;</span><br><span class="line">        <span class="keyword">this</span>.rpassword = rpassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRid</span><span class="params">(<span class="keyword">int</span> rid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rid = rid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRname</span><span class="params">(String rname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rname = rname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRpassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rpassword;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRpassword</span><span class="params">(String rpassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rpassword = rpassword;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="User-java"><a href="#User-java" class="headerlink" title="- User.java"></a>- User.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> uid;</span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line">    <span class="keyword">private</span> String upassword;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ubinit;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ubid;</span><br><span class="line">    <span class="keyword">private</span> String ubname;</span><br><span class="line">    <span class="keyword">private</span> String ubpress;</span><br><span class="line">    <span class="keyword">private</span> String ubauthor;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> ubprice;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String uname, String upassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">        <span class="keyword">this</span>.upassword = upassword;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String ubname, String ubpress, String ubauthor, <span class="keyword">double</span> ubprice)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ubname = ubname;</span><br><span class="line">        <span class="keyword">this</span>.ubpress = ubpress;</span><br><span class="line">        <span class="keyword">this</span>.ubauthor = ubauthor;</span><br><span class="line">        <span class="keyword">this</span>.ubprice = ubprice;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUbid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ubid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUbid</span><span class="params">(<span class="keyword">int</span> ubid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ubid = ubid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUbname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ubname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUbname</span><span class="params">(String ubname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ubname = ubname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUbpress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ubpress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUbpress</span><span class="params">(String ubpress)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ubpress = ubpress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUbauthor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ubauthor;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUbauthor</span><span class="params">(String ubauthor)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ubauthor = ubauthor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getUbprice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ubprice;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUbprice</span><span class="params">(<span class="keyword">double</span> ubprice)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ubprice = ubprice;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUname</span><span class="params">(String uname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUpassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> upassword;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpassword</span><span class="params">(String upassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.upassword = upassword;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="api接口"><a href="#api接口" class="headerlink" title="api接口"></a>api接口</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sql.entity.Books;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BooksApi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addBooks</span><span class="params">(Books book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateBooks</span><span class="params">(Books book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delBookbyID</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Books&gt; <span class="title">getAllBook</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lendBooks</span><span class="params">(<span class="keyword">int</span> id)</span></span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> sql.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sql.entity.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RootApi</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">certifyRoot</span><span class="params">(String rname,String rpassword)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> sql.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sql.entity.User;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserApi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">certifyUser</span><span class="params">(String uname,String upassword)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getAllUBook</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delBookbyID</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="实现接口achieve-api"><a href="#实现接口achieve-api" class="headerlink" title="实现接口achieve_api"></a>实现接口achieve_api</h2><h3 id="BooksAchi-java"><a href="#BooksAchi-java" class="headerlink" title="- BooksAchi.java"></a>- BooksAchi.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql.achieve_api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sql.DbUtil;</span><br><span class="line"><span class="keyword">import</span> sql.api.BooksApi;</span><br><span class="line"><span class="keyword">import</span> sql.entity.Books;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BooksAchi</span> <span class="keyword">implements</span> <span class="title">BooksApi</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addBooks</span><span class="params">(Books book)</span> </span>&#123;</span><br><span class="line">        String insert = <span class="string">"insert into books(bid,bname,bpress,bauthor,bprice,bsurplus,blend) "</span></span><br><span class="line">                + <span class="string">"values('"</span> + book.getBid() + <span class="string">"','"</span> + book.getBname() + <span class="string">"','"</span> + book.getBpress() + <span class="string">"','"</span> +</span><br><span class="line">                book.getBauthor() + <span class="string">"','"</span> + book.getBprice() + <span class="string">"','"</span> + book.getBsurplus() + <span class="string">"','"</span> + book.getBlend() + <span class="string">"')"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DbUtil.runUpdate(insert);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateBooks</span><span class="params">(Books book)</span> </span>&#123;</span><br><span class="line">        String update = <span class="string">"update books set bid='"</span> + book.getBid()+ <span class="string">"',bname='"</span>+book.getBname()+<span class="string">"',bpress='"</span>+</span><br><span class="line">                book.getBpress() + <span class="string">"',bauthor='"</span> + book.getBauthor() + <span class="string">"',bprice='"</span>+book.getBprice()+<span class="string">"',bsurplus='"</span></span><br><span class="line">                + book.getBsurplus() + <span class="string">"' where binit="</span>+book.getBinit();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DbUtil.runUpdate(update);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delBookbyID</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        String delete = <span class="string">"delete from books where bid = '"</span>+id+<span class="string">"'"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DbUtil.runUpdate(delete);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Books&gt; <span class="title">getAllBook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String select=<span class="string">"select * from books"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;Books&gt; books = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            ResultSet rs = DbUtil.runQuery(select);  <span class="comment">//执行sql查询语句</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                Books book = <span class="keyword">new</span> Books();</span><br><span class="line">                book.setBinit(rs.getInt(<span class="string">"binit"</span>));</span><br><span class="line">                book.setBid(rs.getInt(<span class="string">"bid"</span>));</span><br><span class="line">                book.setBname(rs.getString(<span class="string">"bname"</span>));</span><br><span class="line">                book.setBpress(rs.getString(<span class="string">"bpress"</span>));</span><br><span class="line">                book.setBauthor(rs.getString(<span class="string">"bauthor"</span>));</span><br><span class="line">                book.setBprice(rs.getDouble(<span class="string">"bprice"</span>));</span><br><span class="line">                book.setBsurplus(rs.getInt(<span class="string">"bsurplus"</span>));</span><br><span class="line">                book.setBlend(rs.getInt(<span class="string">"blend"</span>));</span><br><span class="line">                books.add(book);</span><br><span class="line">            &#125;</span><br><span class="line">            DbUtil.realeaseAll();</span><br><span class="line">            <span class="keyword">return</span> books;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Books&gt; <span class="title">getSomeBooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String select=<span class="string">"select * from books"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;Books&gt; books = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            ResultSet rs = DbUtil.runQuery(select);  <span class="comment">//执行sql查询语句</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                Books book = <span class="keyword">new</span> Books();</span><br><span class="line"></span><br><span class="line">                book.setBid(rs.getInt(<span class="string">"bid"</span>));</span><br><span class="line">                book.setBname(rs.getString(<span class="string">"bname"</span>));</span><br><span class="line">                book.setBpress(rs.getString(<span class="string">"bpress"</span>));</span><br><span class="line">                book.setBauthor(rs.getString(<span class="string">"bauthor"</span>));</span><br><span class="line">                book.setBprice(rs.getDouble(<span class="string">"bprice"</span>));</span><br><span class="line">                book.setBsurplus(rs.getInt(<span class="string">"bsurplus"</span>));</span><br><span class="line">                books.add(book);</span><br><span class="line">            &#125;</span><br><span class="line">            DbUtil.realeaseAll();</span><br><span class="line">            <span class="keyword">return</span> books;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lendBooks</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        String  update = <span class="string">"update books set bsurplus = bsurplus-1 where bid = '"</span>+id+<span class="string">"'"</span>;</span><br><span class="line">        String  update2 = <span class="string">"update books set blend = blend+1 where bid = '"</span>+id+<span class="string">"'"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DbUtil.runUpdate(update);</span><br><span class="line">            DbUtil.runUpdate(update2);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="RootAchi-java"><a href="#RootAchi-java" class="headerlink" title="- RootAchi.java"></a>- RootAchi.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql.achieve_api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sql.DbUtil;</span><br><span class="line"><span class="keyword">import</span> sql.api.RootApi;</span><br><span class="line"><span class="keyword">import</span> sql.entity.Root;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RootAchi</span> <span class="keyword">implements</span> <span class="title">RootApi</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">certifyRoot</span><span class="params">(String rname, String rpassword)</span> </span>&#123;</span><br><span class="line">        String select=<span class="string">"select * from root where rname='"</span>+rname+<span class="string">"' and rpassword='"</span>+rpassword+<span class="string">"'"</span>;</span><br><span class="line">        <span class="keyword">boolean</span> isCertifyUser = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ResultSet rs = DbUtil.runQuery(select);</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                isCertifyUser = rs.next();</span><br><span class="line">                DbUtil.realeaseAll();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isCertifyUser;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserAchi-java"><a href="#UserAchi-java" class="headerlink" title="- UserAchi.java"></a>- UserAchi.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sql.achieve_api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sql.DbUtil;</span><br><span class="line"><span class="keyword">import</span> sql.api.UserApi;</span><br><span class="line"><span class="keyword">import</span> sql.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAchi</span> <span class="keyword">implements</span> <span class="title">UserApi</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        String insert = <span class="string">"insert into userID(uname,upassword) values('"</span>+user.getUname()+<span class="string">"','"</span>+user.getUpassword()+<span class="string">"')"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DbUtil.runUpdate(insert);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">certifyUser</span><span class="params">(String uname, String upassword)</span> </span>&#123;</span><br><span class="line">        String select=<span class="string">"select * from userID where uname='"</span>+uname+<span class="string">"' and upassword='"</span>+upassword+<span class="string">"'"</span>;</span><br><span class="line">        <span class="keyword">boolean</span> isCertifyUser = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ResultSet rs = DbUtil.runQuery(select);</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                isCertifyUser = rs.next();</span><br><span class="line">                DbUtil.realeaseAll();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isCertifyUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getAllUBook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String select=<span class="string">"select * from user"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;User&gt; ubooks = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            ResultSet rs = DbUtil.runQuery(select);  <span class="comment">//执行sql查询语句</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                User ubook = <span class="keyword">new</span> User();</span><br><span class="line">                ubook.setUbid(rs.getInt(<span class="string">"ubid"</span>));</span><br><span class="line">                ubook.setUbname(rs.getString(<span class="string">"ubname"</span>));</span><br><span class="line">                ubook.setUbpress(rs.getString(<span class="string">"ubpress"</span>));</span><br><span class="line">                ubook.setUbauthor(rs.getString(<span class="string">"ubauthor"</span>));</span><br><span class="line">                ubook.setUbprice(rs.getDouble(<span class="string">"ubprice"</span>));</span><br><span class="line">                ubooks.add(ubook);</span><br><span class="line">            &#125;</span><br><span class="line">            DbUtil.realeaseAll();</span><br><span class="line">            <span class="keyword">return</span> ubooks;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delBookbyID</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        String delete = <span class="string">"delete from user where ubid = '"</span>+id+<span class="string">"'"</span>;</span><br><span class="line">        String addNum = <span class="string">"update books set bsurplus = bsurplus+1 where bid = '"</span>+id+<span class="string">"'"</span>;</span><br><span class="line">        String musNum = <span class="string">"update books set blend = blend-1 where bid = '"</span>+id+<span class="string">"'"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> op = JOptionPane.showConfirmDialog(<span class="keyword">null</span>, <span class="string">"确定归还此书籍吗?"</span>, <span class="string">"归还书籍"</span>,JOptionPane.YES_NO_OPTION);</span><br><span class="line">            <span class="keyword">if</span> (op == JOptionPane.YES_OPTION) &#123;</span><br><span class="line">                DbUtil.runUpdate(delete);</span><br><span class="line">                DbUtil.runUpdate(addNum);</span><br><span class="line">                DbUtil.runUpdate(musNum);</span><br><span class="line">                JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"归还成功！"</span>, <span class="string">"归还书籍"</span>, JOptionPane.INFORMATION_MESSAGE);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">setLendBooks</span><span class="params">(User ubook)</span> </span>&#123;</span><br><span class="line">        String insert = <span class="string">"insert into user(ubid,ubname,ubpress,ubauthor,ubprice) "</span></span><br><span class="line">                + <span class="string">"values('"</span> + ubook.getUbid() + <span class="string">"','"</span> + ubook.getUbname() + <span class="string">"','"</span> + ubook.getUbpress() + <span class="string">"','"</span> +</span><br><span class="line">                ubook.getUbauthor() + <span class="string">"','"</span> + ubook.getUbprice() + <span class="string">"')"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DbUtil.runUpdate(insert);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="GUI界面设计——定制表格"><a href="#GUI界面设计——定制表格" class="headerlink" title="GUI界面设计——定制表格"></a>GUI界面设计——定制表格</h2><h3 id="SimpleModel-java"><a href="#SimpleModel-java" class="headerlink" title="- SimpleModel.java"></a>- SimpleModel.java</h3><p>​        此类继承 AbstractTableModel类 ，它提供了TableModel接口中绝大多数方法的缺省实现 ， 除了getRowCount(),getColumnCount()，getValueAt()这三个方法外。 因此我们的主要任务就是去实现这三个方法.利用这个抽象类就可以设计出不同格式的表格。</p>
<p>​        学习AbstractTableModel 可浏览<a href="https://blog.csdn.net/edc3001/article/details/83386713" target="_blank" rel="noopener"> Onedean的博客</a>。</p>
<p>​        接下来请看具体实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.table.AbstractTableModel;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleModel</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractTableModel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;String&gt; columnNames;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; rows;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SimpleModel</span><span class="params">(List&lt;String&gt; columnNames,List&lt;T&gt; rows)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.columnNames =  columnNames;</span><br><span class="line">        <span class="keyword">this</span>.rows = rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getColumnNames</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> columnNames;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColumnNames</span><span class="params">(List&lt;String&gt; columnNames)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.columnNames = columnNames;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">getRows</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRows</span><span class="params">(List&lt;T&gt; rows)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rows = rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRowCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rows.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getColumnCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> columnNames.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getColumnName</span><span class="params">(<span class="keyword">int</span> column)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> columnNames.get(column);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getValueAt</span><span class="params">(<span class="keyword">int</span> rowIndex, <span class="keyword">int</span> columnIndex)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;Method&gt; getMethods = ClassRefect.getAllGetMethod(rows.get(rowIndex));</span><br><span class="line">            <span class="keyword">return</span> getMethods.get(columnIndex).invoke(rows.get(rowIndex), <span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ClassRefect-java"><a href="#ClassRefect-java" class="headerlink" title="- ClassRefect.java"></a>- ClassRefect.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Level;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassRefect</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Comparator MySort = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//************获取所有公有的字段********************</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  Field[] getAllPublicAttribute(Object obj)</span><br><span class="line">    &#123;</span><br><span class="line">        Class refClass = obj.getClass();</span><br><span class="line">        <span class="comment">//System.out.println(refClass);</span></span><br><span class="line">        <span class="keyword">return</span> refClass.getFields();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//************获取所有定义的字段(包括私有、受保护、默认的)********************</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field[] getAllAttribute(Object obj)</span><br><span class="line">    &#123;</span><br><span class="line">        Class refClass = obj.getClass();</span><br><span class="line">        <span class="comment">//System.out.println(refClass);</span></span><br><span class="line">        <span class="keyword">return</span> refClass.getDeclaredFields();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//************获取所有公有的方法********************</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Method[] getAllPublicMethod(Object obj)</span><br><span class="line">    &#123;</span><br><span class="line">        Class refClass = obj.getClass();</span><br><span class="line">        <span class="comment">//System.out.println(refClass);</span></span><br><span class="line">        <span class="keyword">return</span> refClass.getMethods();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//************获取所有的Get方法********************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Method&gt; <span class="title">getAllGetMethod</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        List&lt;Method&gt; getMethods=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Class refClass = obj.getClass();</span><br><span class="line">        String[] row= &#123;<span class="string">"getBid"</span>,<span class="string">"getBname"</span>,<span class="string">"getBpress"</span>,<span class="string">"getBauthor"</span>,<span class="string">"getBprice"</span>,<span class="string">"getBsurplus"</span>,<span class="string">"getBlend"</span>&#125;;</span><br><span class="line">        String[] row2=&#123;<span class="string">"getUbid"</span>,<span class="string">"getUbname"</span>,<span class="string">"getUbpress"</span>,<span class="string">"getUbauthor"</span>,<span class="string">"getUbprice"</span>&#125;;</span><br><span class="line">        Method[] methodArray = refClass.getMethods();</span><br><span class="line">        <span class="keyword">for</span>(String r:row)&#123;</span><br><span class="line">            <span class="keyword">for</span>(Method m:methodArray)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(m.getName()== r)&#123;</span><br><span class="line">                    getMethods.add(m);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (String r:row2)&#123;</span><br><span class="line">            <span class="keyword">for</span>(Method m:methodArray)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(m.getName()== r)&#123;</span><br><span class="line">                    getMethods.add(m);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getMethods;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//************调用所有的Get方法********************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">invokeAllGetMethod</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Class refClass = obj.getClass();</span><br><span class="line">        <span class="comment">//System.out.println(refClass);</span></span><br><span class="line">        Method[] methodArray = refClass.getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method m : methodArray) &#123;</span><br><span class="line">            <span class="comment">//System.out.println(m);</span></span><br><span class="line">            <span class="keyword">if</span>(m.getName().contains(<span class="string">"get"</span>))&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    System.out.println(m.getName());</span><br><span class="line">                    System.out.println(m.invoke(obj, <span class="keyword">null</span>));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">                    Logger.getLogger(ClassRefect<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>()).<span class="title">log</span>(<span class="title">Level</span>.<span class="title">SEVERE</span>, <span class="title">null</span>, <span class="title">ex</span>)</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalArgumentException ex) &#123;</span><br><span class="line">                    Logger.getLogger(ClassRefect<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>()).<span class="title">log</span>(<span class="title">Level</span>.<span class="title">SEVERE</span>, <span class="title">null</span>, <span class="title">ex</span>)</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line">                    Logger.getLogger(ClassRefect<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>()).<span class="title">log</span>(<span class="title">Level</span>.<span class="title">SEVERE</span>, <span class="title">null</span>, <span class="title">ex</span>)</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="相关交互界面实现（包括-登录界面-LoginJFrame、管理员操作界面-RootJFrame、增加书籍-AddBookJFrame、更新书籍-UpdataJFrame、读者操作界面-UserJFrame、已借阅书籍展示-AllBookJFrame）"><a href="#相关交互界面实现（包括-登录界面-LoginJFrame、管理员操作界面-RootJFrame、增加书籍-AddBookJFrame、更新书籍-UpdataJFrame、读者操作界面-UserJFrame、已借阅书籍展示-AllBookJFrame）" class="headerlink" title="- 相关交互界面实现（包括 登录界面-LoginJFrame、管理员操作界面-RootJFrame、增加书籍-AddBookJFrame、更新书籍-UpdataJFrame、读者操作界面-UserJFrame、已借阅书籍展示-AllBookJFrame）"></a>- 相关交互界面实现（包括 登录界面-LoginJFrame、管理员操作界面-RootJFrame、增加书籍-AddBookJFrame、更新书籍-UpdataJFrame、读者操作界面-UserJFrame、已借阅书籍展示-AllBookJFrame）</h3><p>​        </p>
<p><strong>由于篇幅原因，仅列出RootJFrame.java，即管理员操作界面。具体源码，请见</strong><a href="https://github.com/LJG-V/BooksManage" target="_blank" rel="noopener">github</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> gui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sql.achieve_api.BooksAchi;</span><br><span class="line"><span class="keyword">import</span> sql.entity.Books;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.border.EmptyBorder;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RootJFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JPanel contentPane;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; columnNames;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Books&gt; rows;</span><br><span class="line">    <span class="keyword">private</span> BooksAchi booksAchi;</span><br><span class="line">    <span class="keyword">private</span> JTable jTable;</span><br><span class="line">    <span class="keyword">private</span> SimpleModel&lt;Books&gt; simpleModel;</span><br><span class="line">    <span class="keyword">private</span> JTextField queryTxt;</span><br><span class="line">    <span class="keyword">private</span> JButton queryBtn;</span><br><span class="line">    <span class="keyword">private</span> JButton allBtn;</span><br><span class="line">    <span class="keyword">private</span> JButton refBtn;</span><br><span class="line">    <span class="keyword">private</span> TableColumn column = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RootJFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        setTitle(<span class="string">"图书管理"</span>);</span><br><span class="line">        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">        setBounds(<span class="number">200</span>, <span class="number">100</span>, <span class="number">1000</span>, <span class="number">800</span>);</span><br><span class="line">        contentPane = <span class="keyword">new</span> JPanel();</span><br><span class="line">        contentPane.setBorder(<span class="keyword">new</span> EmptyBorder(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line">        contentPane.setLayout(<span class="keyword">new</span> BorderLayout(<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        setContentPane(contentPane);</span><br><span class="line">        columnNames = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        columnNames.add(<span class="string">"编号"</span>);</span><br><span class="line">        columnNames.add(<span class="string">"书籍名称"</span>);</span><br><span class="line">        columnNames.add(<span class="string">"出版社"</span>);</span><br><span class="line">        columnNames.add(<span class="string">"作者"</span>);</span><br><span class="line">        columnNames.add(<span class="string">"定价"</span>);</span><br><span class="line">        columnNames.add(<span class="string">"在馆数"</span>);</span><br><span class="line">        columnNames.add(<span class="string">"借出数"</span>);</span><br><span class="line">        booksAchi = <span class="keyword">new</span> BooksAchi();</span><br><span class="line">        rows = booksAchi.getAllBook();</span><br><span class="line">        simpleModel = <span class="keyword">new</span> SimpleModel&lt;Books&gt;(columnNames,rows);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        JLabel jLabel = <span class="keyword">new</span> JLabel();</span><br><span class="line">        jLabel.setText(<span class="string">"图书管理系统"</span>);</span><br><span class="line">        jLabel.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>,Font.BOLD,<span class="number">36</span>));</span><br><span class="line">        jLabel.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line">        getContentPane().add(jLabel,BorderLayout.PAGE_START);</span><br><span class="line">        JScrollPane jScrollPane = <span class="keyword">new</span> JScrollPane();</span><br><span class="line">        jTable = <span class="keyword">new</span> JTable();</span><br><span class="line"></span><br><span class="line">        jTable.setModel(simpleModel);</span><br><span class="line">        jScrollPane.setViewportView(jTable);</span><br><span class="line">        getContentPane().add(jScrollPane, BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">        column = jTable.getColumnModel().getColumn(<span class="number">0</span>);  <span class="comment">//设置列宽</span></span><br><span class="line">        column.setMinWidth(<span class="number">60</span>);</span><br><span class="line">        column.setMaxWidth(<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">        jTable.setRowHeight(<span class="number">30</span>); <span class="comment">//设置行高</span></span><br><span class="line"></span><br><span class="line">        DefaultTableCellRenderer r=<span class="keyword">new</span> DefaultTableCellRenderer();</span><br><span class="line">        r.setHorizontalAlignment(JLabel.CENTER);    <span class="comment">//设置内容居中</span></span><br><span class="line">        jTable.setDefaultRenderer(Object<span class="class">.<span class="keyword">class</span>,<span class="title">r</span>)</span>;</span><br><span class="line"></span><br><span class="line">        JMenuBar jMenuBar = <span class="keyword">new</span> JMenuBar();</span><br><span class="line">        JMenu file = <span class="keyword">new</span> JMenu();</span><br><span class="line">        file.setText(<span class="string">"文件"</span>);</span><br><span class="line">        JMenuItem quit = <span class="keyword">new</span> JMenuItem();</span><br><span class="line">        quit.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                quitActionPerformed(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        quit.setText(<span class="string">"退出"</span>);</span><br><span class="line">        file.add(quit);</span><br><span class="line">        jMenuBar.add(file);</span><br><span class="line"></span><br><span class="line">        JMenu edit = <span class="keyword">new</span> JMenu();</span><br><span class="line">        edit.setText(<span class="string">"编辑"</span>);</span><br><span class="line">        edit.setToolTipText(<span class="string">""</span>);</span><br><span class="line">        JMenuItem insert = <span class="keyword">new</span> JMenuItem();</span><br><span class="line">        insert.setText(<span class="string">"添加"</span>);</span><br><span class="line">        insert.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                addBookActionPerformed(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        edit.add(insert);</span><br><span class="line">        jMenuBar.add(edit);</span><br><span class="line"></span><br><span class="line">        JMenuItem update = <span class="keyword">new</span> JMenuItem();</span><br><span class="line">        update.setText(<span class="string">"更新"</span>);</span><br><span class="line">        update.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                updateBookActionPerformed(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        edit.add(update);</span><br><span class="line"></span><br><span class="line">        JMenuItem delete = <span class="keyword">new</span> JMenuItem(<span class="string">"删除"</span>);</span><br><span class="line">        delete.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                delBookActionPerformed(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        edit.add(delete);</span><br><span class="line"></span><br><span class="line">        JMenu statistics = <span class="keyword">new</span> JMenu();</span><br><span class="line">        statistics.setText(<span class="string">"统计"</span>);</span><br><span class="line">        jMenuBar.add(statistics);</span><br><span class="line">        JMenu help = <span class="keyword">new</span> JMenu();</span><br><span class="line">        help.setText(<span class="string">"帮助"</span>);</span><br><span class="line">        JMenuItem about = <span class="keyword">new</span> JMenuItem();</span><br><span class="line">        about.setText(<span class="string">"关于"</span>);</span><br><span class="line">        about.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                aboutActionPerformed(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        help.add(about);</span><br><span class="line">        jMenuBar.add(help);</span><br><span class="line">        setJMenuBar(jMenuBar);</span><br><span class="line"></span><br><span class="line">        JPanel down = <span class="keyword">new</span> JPanel();</span><br><span class="line">        JPanel right = <span class="keyword">new</span> JPanel();</span><br><span class="line">        queryTxt = <span class="keyword">new</span> JTextField(<span class="number">25</span>);</span><br><span class="line">        JRadioButton rdoMan = <span class="keyword">new</span> JRadioButton(<span class="string">"按书名查询"</span>);</span><br><span class="line">        JRadioButton rdoWoman = <span class="keyword">new</span> JRadioButton(<span class="string">"按编号查询"</span>);</span><br><span class="line">        ButtonGroup group = <span class="keyword">new</span> ButtonGroup();</span><br><span class="line">        group.add(rdoMan);</span><br><span class="line">        group.add(rdoWoman);</span><br><span class="line">        <span class="comment">// 设置默认选择</span></span><br><span class="line">        rdoMan.setSelected(<span class="keyword">true</span>);</span><br><span class="line">        down.add(rdoMan,BorderLayout.AFTER_LINE_ENDS);</span><br><span class="line">        down.add(rdoWoman,BorderLayout.AFTER_LINE_ENDS);</span><br><span class="line">        queryBtn = <span class="keyword">new</span> JButton(<span class="string">"查询"</span>);</span><br><span class="line">        queryBtn.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (rdoMan.isSelected())&#123;</span><br><span class="line">                   queryByNameActionPerformed(e);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (rdoWoman.isSelected())&#123;</span><br><span class="line">                   queryByIDActionPerformed(e);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        allBtn = <span class="keyword">new</span> JButton(<span class="string">"全部"</span>);</span><br><span class="line">        allBtn.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">            queryAllActionPerformed(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">        refBtn = <span class="keyword">new</span> JButton(<span class="string">"刷新"</span>);</span><br><span class="line">        refBtn.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                refreshActionPerformed(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        queryTxt.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">        rdoMan.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, <span class="number">25</span>));</span><br><span class="line">        rdoWoman.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, <span class="number">25</span>));</span><br><span class="line">        queryBtn.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, <span class="number">25</span>));</span><br><span class="line">        allBtn.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, <span class="number">25</span>));</span><br><span class="line">        refBtn.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, <span class="number">25</span>));</span><br><span class="line">        down.add(queryTxt);</span><br><span class="line">        down.add(queryBtn);</span><br><span class="line">        down.add(allBtn);</span><br><span class="line">        <span class="keyword">this</span>.add(down,BorderLayout.PAGE_END);</span><br><span class="line">        right.add(refBtn);</span><br><span class="line">        <span class="keyword">this</span>.add(right,BorderLayout.LINE_START);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">queryByIDActionPerformed</span><span class="params">(ActionEvent evt)</span> </span>&#123;</span><br><span class="line">        rows=booksAchi.getAllBook();</span><br><span class="line">        simpleModel.setRows(rows);</span><br><span class="line">        <span class="keyword">int</span> id = Integer.parseInt(<span class="keyword">this</span>.queryTxt.getText());</span><br><span class="line">        List&lt;Books&gt; rows = simpleModel.getRows();</span><br><span class="line">        <span class="keyword">int</span> index = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rows.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(id==rows.get(i).getBid()) index = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index == -<span class="number">1</span>)&#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"未找该书籍！"</span>, <span class="string">"按编号查询书籍"</span>,JOptionPane.WARNING_MESSAGE );</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            jTable.changeSelection(index, <span class="number">0</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">queryAllActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        TableRowSorter&lt;TableModel&gt; sorter = (TableRowSorter&lt;TableModel&gt;) jTable.getRowSorter();</span><br><span class="line">        <span class="keyword">if</span>(sorter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            sorter = <span class="keyword">new</span> TableRowSorter&lt;&gt;(jTable.getModel());</span><br><span class="line">            jTable.setRowSorter(sorter);</span><br><span class="line">        &#125;</span><br><span class="line">        String text = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (text.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            sorter.setRowFilter(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">queryByNameActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        TableRowSorter&lt;TableModel&gt; sorter = (TableRowSorter&lt;TableModel&gt;) jTable.getRowSorter();</span><br><span class="line">        <span class="keyword">if</span>(sorter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            sorter = <span class="keyword">new</span> TableRowSorter&lt;&gt;(jTable.getModel());</span><br><span class="line">            jTable.setRowSorter(sorter);</span><br><span class="line">        &#125;</span><br><span class="line">        String text = queryTxt.getText();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (text.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"请输入具体书籍..."</span>,<span class="string">"按书名查询书籍"</span>,JOptionPane.ERROR_MESSAGE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"查询成功！"</span>,<span class="string">"按书名查询书籍"</span>,JOptionPane.INFORMATION_MESSAGE);</span><br><span class="line">            <span class="comment">//设置RowFilter 用于从模型中过滤条目，使得这些条目不会在视图中显示</span></span><br><span class="line">            sorter.setRowFilter(RowFilter.regexFilter(text,<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">aboutActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"图书管理系统 ver 1.2.0\n\n  版权：ljg"</span>,<span class="string">"关于图书管理"</span> +</span><br><span class="line">                <span class="string">"系统"</span>,JOptionPane.PLAIN_MESSAGE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addBookActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> AddBookJFrame().setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        rows=booksAchi.getAllBook();</span><br><span class="line">        simpleModel.setRows(rows);</span><br><span class="line">        simpleModel.fireTableDataChanged();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateBookActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            rows = booksAchi.getAllBook();</span><br><span class="line">            simpleModel.setRows(rows);</span><br><span class="line">            <span class="keyword">int</span> row = jTable.getSelectedRow(); <span class="comment">//获得行位置</span></span><br><span class="line">            jTable.setRowSelectionInterval(row, row);<span class="comment">//高亮显示</span></span><br><span class="line">            Books book = rows.get(jTable.convertRowIndexToModel(row));</span><br><span class="line">            <span class="keyword">new</span> UpdataBookJFrame(book).setVisible(<span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"请选中具体书籍..."</span>,<span class="string">"更新书籍信息"</span>,JOptionPane.ERROR_MESSAGE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">delBookActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Books student=rows.get(jTable.getSelectedRow());</span><br><span class="line">            booksAchi.delBookbyID(student.getBid());</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"删除成功"</span>, <span class="string">"删除书籍信息"</span>, JOptionPane.INFORMATION_MESSAGE);</span><br><span class="line">            rows=booksAchi.getAllBook();</span><br><span class="line">            simpleModel.setRows(rows);</span><br><span class="line">            simpleModel.fireTableDataChanged();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"删除失败!请选中书籍..."</span>, <span class="string">"删除书籍信息"</span>, JOptionPane.ERROR_MESSAGE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">quitActionPerformed</span><span class="params">(ActionEvent actionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">this</span>.dispose();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Main"><a href="#Main" class="headerlink" title="Main()"></a>Main()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gui.LoginJFrame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LoginJFrame loginJFrame=<span class="keyword">new</span> LoginJFrame();</span><br><span class="line">        loginJFrame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="运行截图"><a href="#运行截图" class="headerlink" title="运行截图"></a>运行截图</h1><ul>
<li>登录界面</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Books/picture/%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt=""> </p>
<ul>
<li><p>管理员操作界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Books/picture/%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95.png" alt=""> </p>
<blockquote>
<p>​        ”编辑“菜单可对图书进行添加、更新、删除，“统计”菜单未做，你可以加上哦(^_−)☆，“按书名查询”只需输入相关名字就可以自动过滤<del>~</del></p>
</blockquote>
<ul>
<li><p>添加书籍</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Books/picture/%E6%B7%BB%E5%8A%A0%E4%B9%A6%E7%B1%8D.png" alt=""></p>
</li>
<li><p>更新书籍</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Books/picture/%E6%9B%B4%E6%96%B0%E4%B9%A6%E7%B1%8D.png" alt=""></p>
</li>
<li><p>管理员查询</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Books/picture/%E7%AE%A1%E7%90%86%E5%91%98%E6%9F%A5%E8%AF%A2.png" alt=""></p>
</li>
</ul>
</li>
<li><p>读者操作界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Books/picture/%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95.png" alt=""></p>
<ul>
<li>读者借阅中心</li>
</ul>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/LJG-V/blog_cdn@Books/picture/%E8%AF%BB%E8%80%85%E5%80%9F%E9%98%85%E4%B8%AD%E5%BF%83.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>​        在这次的系统设计中，也有磕磕碰碰，其中有几个功能未做，当然还有小小的bug…(小声bb，注册新用户之后，读者中心还是之前用户的借阅信息，因为没有为新注册的用户创建一个私有的数据库 ((유∀유|||)) )，唉~~不过应付一般课设足矣。(ﾟωﾟ)ﾉ☆ </p>
<p>注：个人觉得，Swing写一个练练手就行，毕竟Swing在以后的工作中用的很少，不需要花太多时间在Swing上面哦<del>~</del></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式文件系统-HDFS</title>
    <url>/2020/01/30/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E2%80%94HDFS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>本文转载于：<a href="https://paperwj.top" target="_blank" rel="noopener">Paperwjun的博客</a></strong></p>
<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>仅用于个人学习使用且<strong>电脑配置有限</strong>，因此搭建伪分布式模式，即在单节点上启动NameNode、DataNode、SecondaryNameNode等进程，但操作、原理与完全分布式模式一样仅学习还是够用的。HDFS作为Hadoop两大重要组成部分之一，主要解决海量数据存储问题，<a href="https://baike.baidu.com/item/HDFS" target="_blank" rel="noopener">详细信息点击这里哟！</a><br>下面是我的实验环境（Hadoop大多运行在Linux系统下）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">服务器：Centos 6</span><br><span class="line">虚拟机：VMware Workstation Pro 13.0</span><br><span class="line">SSH：MobaXterm</span><br><span class="line">PC：Win10</span><br></pre></td></tr></table></figure>



<h1 id="二、HDFS运行原理"><a href="#二、HDFS运行原理" class="headerlink" title="二、HDFS运行原理"></a>二、HDFS运行原理</h1><h2 id="1-HDFS概念"><a href="#1-HDFS概念" class="headerlink" title="1.HDFS概念"></a>1.HDFS概念</h2><ul>
<li>HDFS，是 Hadoop Distribute File System 的简称，意为：Hadoop 分布式文件系统。是 Hadoop 核心组件之一。 </li>
<li>HDFS解决的问题就是大数据的存储。它们是横跨在多台计算机上的存储系统。分布式文件系统在大数据时代有着广泛的应用前景，它们为存储和处理超大规模数据提供所需的扩展能力。</li>
<li>HDFS起源于Google的GFS论文（GFS，Mapreduce，BigTable为google的旧的三驾马车）</li>
</ul>
<h2 id="2-HDFS优缺点"><a href="#2-HDFS优缺点" class="headerlink" title="2.HDFS优缺点"></a>2.HDFS优缺点</h2><ul>
<li><p>优点</p>
<ul>
<li>高容错性</li>
<li>适合大数据处理</li>
<li>可搭建在廉价的机器上</li>
</ul>
</li>
<li><p>缺点</p>
<ul>
<li>不适合低延迟数据访问</li>
<li>不适合大量小文件进行存储</li>
<li>不支持文件并发写入和文件随机修改</li>
</ul>
</li>
</ul>
<h2 id="3-HDFS组成架构（重点）"><a href="#3-HDFS组成架构（重点）" class="headerlink" title="3.HDFS组成架构（重点）"></a>3.HDFS组成架构（重点）</h2><p>HDFS 采用 master/slave 架构。一般一个 HDFS 集群是有一个 Namenode 和一定数目的Datanode 组成。Namenode 是 HDFS 集群主节点，Datanode 是 HDFS 集群从节点，两种角色各司其职，共同协调完成分布式的文件存储服务。</p>
<p><img src="https://hadoop.apache.org/docs/r1.0.4/cn/images/hdfsarchitecture.gif" alt="HDFS架构设计"></p>
<ul>
<li><p>Client：客户端</p>
<ul>
<li>文件切分。文件上传HDFS的时候，Client将文件切分成一个一个的Block</li>
<li>与NameNode交互，获取文件的位置信息  </li>
<li>与DataNode交互，读取或者写入数据  </li>
<li>提供一些命令来管理HDFS</li>
</ul>
</li>
<li><p>NameNode：名称节点。就是Master，它是一个主管、管理者、老大  </p>
<ul>
<li>存储元数据（内存中）</li>
<li>保存block与DataNode之间的映射关系</li>
</ul>
</li>
<li><p>DataNode：数据节点。就是小弟。NameNode下达命令，DataNode执行实际的操作  </p>
<ul>
<li>存储文件内容（磁盘）</li>
<li>维护block ID到DataNode本地文件的映射关系</li>
<li>存储到本地Linux系统中</li>
</ul>
</li>
<li><p>SecondaryNameNode：第二名称节点。NameNode的<strong>冷备份</strong></p>
<ul>
<li>主要解决EditLog不断增大的问题（下面会详细介绍）</li>
</ul>
</li>
</ul>
<h3 id="3-1-Block大小"><a href="#3-1-Block大小" class="headerlink" title="3.1 Block大小"></a>3.1 Block大小</h3><p>​        HDFS中的文件在物理上是分块存储（block），块的大小可以通过配置参数(<code>dfs.blocksize</code>)来规定，默认大小在hadoop2.x版本中是128M，老版本中是64M。HDFS的块设计成，其目的是为了最小化寻址开销。如果块设置得足够大，从磁盘传输数据的时间会明显大于定位这个块开始位置所需的时间。因而，传输一个由多个块组成的文件的时间取决于磁盘传输速率。</p>
<h3 id="3-2-副本机制"><a href="#3-2-副本机制" class="headerlink" title="3.2 副本机制"></a>3.2 副本机制</h3><p>​        为了容错，文件的所有 block 都会有副本。每个文件的 block 大小和副本系数都是可配置的。应用程序可以指定某个文件的副本数目，副本系数可以在文件创建的时候指定，也可以在之后改变。  </p>
<h3 id="3-3-元数据"><a href="#3-3-元数据" class="headerlink" title="3.3 元数据"></a>3.3 元数据</h3><p>​         数据的描述信息，比如这个文件的路径，这个文件的副本数，每个副本保存在哪个DataNode上，就相当于真真正正的一个人，他有一些信息：身高、体重、姓名、性别等，通过这些信息就可以描述这个人，那描述HDFS上真实数据的信息，就称为元数据。  <img src="https://hadoop.apache.org/docs/r1.0.4/cn/images/hdfsdatanodes.gif" alt=""></p>
<h2 id="4-HDFS运行原理（重点）"><a href="#4-HDFS运行原理（重点）" class="headerlink" title="4.HDFS运行原理（重点）"></a>4.HDFS运行原理（重点）</h2><ul>
<li><p>NameNode启动</p>
<ul>
<li>将FsImage文件内容加载到内存中</li>
<li>执行EditLog文件的各项操作，使得内存的元数据和实际的同步</li>
<li>得到新的FsImage并创建一个空的EditLog文件</li>
<li>启动后所有的操作都记录在EditLog，并不会添加在FsImage中</li>
</ul>
</li>
<li><p>DataNode启动</p>
</li>
<li><p>SecondaryNameNode启动</p>
</li>
</ul>
<p>FsImage：维护文件系统树以及文件树中所有的文件和文件夹的元数据，但不维护块在哪个DataNode（通过NameNode与DataNode实时沟通生成文件目录并储存在内存中），主要记录文件复制等级、修改和访问时间、访问权限、块大小等</p>
<p>EditLog：操作日志文件，记录所有针对文件的增删改查等操作</p>
<p>通过FsImage和EditLog的结合就能完成所有文件的增删改查，但随着文件的修改EditLog会变得非常庞大，这时候就需要通过SecondaryNameNode来解决。</p>
<h3 id="4-1-NameNode运行机制"><a href="#4-1-NameNode运行机制" class="headerlink" title="4.1 NameNode运行机制"></a>4.1 NameNode运行机制</h3><ul>
<li>1.SecondaryNameNode会定期和NameNode通信，请求暂停使用EditLog文件，暂时将新的操作写在新的文件EditLog.new上且瞬间完成。</li>
<li>2.SecondaryNameNode通过HTTP GET方式从NameNode上获取FsImage和EditLog并下载到本地。</li>
<li>3.SecondaryNameNode将下载的FsImage载入内存并与EditLog进行合并</li>
<li>4.SecondaryNameNode通过post方式将新的FsImage发送给NameNode  </li>
<li>5.NameNode将新的FsImage替换掉，同时将EditLog.new替换成EditLog  </li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/1.png" alt=""></p>
<h3 id="4-2-HDFS思维导图"><a href="#4-2-HDFS思维导图" class="headerlink" title="4.2 HDFS思维导图"></a>4.2 HDFS思维导图</h3><p>凑合着看，别问为什么是个图片，问就是没钱^_^</p>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/2.jpg" alt=""></p>
<h1 id="三、HDFS实操"><a href="#三、HDFS实操" class="headerlink" title="三、HDFS实操"></a>三、HDFS实操</h1><h2 id="1-安装虚拟机"><a href="#1-安装虚拟机" class="headerlink" title="1.安装虚拟机"></a>1.安装虚拟机</h2><p>这里强烈推荐一个微信公众号<strong>管家课堂</strong>，为数不多的超良心公众号，各种常用软件安装教程。<a href="https://mp.weixin.qq.com/s/GPMsgE-BFklqUmFwafPVLw" target="_blank" rel="noopener">这是一个安装传送门，记得关注哟</a></p>
<h2 id="2-安装Linux并安装Hadoop"><a href="#2-安装Linux并安装Hadoop" class="headerlink" title="2.安装Linux并安装Hadoop"></a>2.安装Linux并安装Hadoop</h2><p>我已经将配置好的Centos6打包好了<a href="https://pan.baidu.com/s/1eJx9wWaxsr4n_68m2GcD1w" target="_blank" rel="noopener">网盘链接，提取码:cpj1</a></p>
<p>[当然爱折腾的可自行下载、配置、安装]。</p>
<p>解压下载好的安装包，打开VMware虚拟机，点击文件-&gt;打开（<strong>快捷键Ctrl + O</strong>），找到刚才解压的路径打开linux01虚拟机配置即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/3.png" alt=""></p>
<p>出现该提示点击<strong>我已移动该虚拟机</strong>，无需其他操作等待加载完成即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/4.png" alt=""></p>
<p>该虚拟机用户名如下，要使用<strong>root账户</strong>[权限高]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户1：admin</span><br><span class="line">密码：123456</span><br><span class="line">用户2：root</span><br><span class="line">密码：123456</span><br></pre></td></tr></table></figure>

<p>如下即为Centos6的桌面</p>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/5.png" alt=""></p>
<p>从PC机文件上传到虚拟机并不容易，因此我们使用SSH远程连接Linux，这里我使用MobaXterm。首先我们需要<strong>获取这个Linux的IP地址</strong>，右击桌面点击在终端打开输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/6.png" alt=""></p>
<p>框选出来的就是本机IP，打开<strong>MobaXterm-&gt;Session-&gt;SSH</strong>输入刚才得到的IP即可，</p>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/7.png" alt=""></p>
<p>第一次连接需要输入root用户的密码，<strong>注：Linux为保护用户安全，在你输入密码时屏幕并不会出现任何符号。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/8.png" alt=""></p>
<p>黑色背景区域即为Linux终端，一般使用Lin系统是不会选择启动图形化界面的。左边文件夹区域为Linux的文件系统，当需要将PC机文件上传到Linux时，只需拖拽即可。</p>
<p><strong>这个Linux系统已经集成了Hadoop，不需要额外安装。</strong></p>
<h2 id="3-HDFS常见操作命令"><a href="#3-HDFS常见操作命令" class="headerlink" title="3.HDFS常见操作命令"></a>3.HDFS常见操作命令</h2><p>首先需要修改一下配置，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure>

<p>按<code>i</code>，将<strong>最后一行的IP修改为自己</strong>的，按<code>Esc</code>退出修改模式并输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure>

<p>保存并关闭，上述只是Linux系统的操作命令，在我另一篇文章会有详细介绍，并且Hadoop的一些命令和Linux及其一致。</p>
<p>启动HDFS</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure>

<p>启动完成可查看当前进程检查HDFS是否全部启动，输入如下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure>

<p>当看到NameNode、DataNode、SecondaryNameNode即为启动成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/dashingwj/BlogImg/HDFS/9.png" alt=""></p>
<p>若有没有启动的可以结束HDFS并在此启动，代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stop-dfs.sh</span><br><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure>

<p>查看当前HDFS文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hdfs dfs -ls &#x2F;</span><br></pre></td></tr></table></figure>

<p>在HDFS新建文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hdfs dfs -mkdir &#x2F;Test	&#x2F;&#x2F;在根目录下创建Test文件夹</span><br></pre></td></tr></table></figure>

<p>删除HDFS指定文件(夹)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hdfs dfs -rm -f &#x2F;Test	&#x2F;&#x2F;删除指定文件夹</span><br><span class="line">hdfs dfs -rm &#x2F;name.txt	&#x2F;&#x2F;删除指定文件</span><br></pre></td></tr></table></figure>

<p>将Linux文件上传到HDFS上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hdfs dfs -put &#x2F;MapReduce&#x2F;test.txt &#x2F;Data</span><br></pre></td></tr></table></figure>

<p>第一个路径为Linux要上传文件的绝对路径，第二个为上传到HDFS的路径（上述代码不要直接复制，因为你的Linux和HDFS可能没有这个文件夹和文件）</p>
<p>将HDFS文件下载到Linux本地</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hdfs dfs -get &#x2F;Data&#x2F;text &#x2F;MapReduce</span><br></pre></td></tr></table></figure>

<p>同理第一个路径为HDFS要下载文件的绝对路径，第二个为下载到Linux本地的文件路径（Linux本地不能有与要下载文件同名的文件，道理很显然）</p>
<p>最后，关机命令（虚拟机上的系统很脆弱，要小心呵护不要暴力关机！！！）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shutdown -h now</span><br></pre></td></tr></table></figure>

<p>上述命令基本够用学习MapReduce了，期待下一遍博文将会详细介绍Hadoop另一个重要组件<strong>MapReduce</strong></p>
<center>![](https://bpic.588ku.com//original_origin_min_pic/18/06/20/f651302009e2e93fb59702e8100e9817.jpg)</center>
- 需要MobaXterm及其他技术支持联系微信^_^ skr~]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
</search>
